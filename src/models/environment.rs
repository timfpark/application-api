use kube::CustomResource;
use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
use std::collections::HashMap;

#[derive(Clone, Debug, PartialEq, JsonSchema, Serialize, Deserialize)]
pub enum ClustersSpec {
    Count(u32),
    All,
}

/// Struct corresponding to the Specification (`spec`) part of the `ApplicationEnvironment` resource, directly
/// reflects context of the `applicationenvironments.microsoft.com.yaml` file to be found in this repository.
/// The `ApplicationEnvironment` struct will be generated by the `CustomResource` derive macro.
#[derive(CustomResource, Serialize, Deserialize, Debug, PartialEq, Clone, JsonSchema)]
#[kube(
    group = "microsoft.com",
    version = "v1alpha1",
    kind = "ApplicationEnvironment",
    plural = "applicationenvironments",
    derive = "PartialEq",
    namespaced
)]
pub struct ApplicationEnvironmentSpec {
    pub application: String,
    pub environment: String,
    // pub selector: HashMap<String, String>,
    pub values: Option<HashMap<String, String>>,
}
