use kube::CustomResource;
use schemars::JsonSchema;
use serde::{Deserialize, Serialize};

/// Struct corresponding to the Specification (`spec`) part of the `Application` resource, directly
/// reflects context of the `applications.microsoft.com.yaml` file to be found in this repository.
/// The `Application` struct will be generated by the `CustomResource` derive macro.
#[derive(CustomResource, Serialize, Deserialize, Debug, PartialEq, Clone, JsonSchema)]
#[kube(
    group = "microsoft.com",
    version = "v1alpha",
    kind = "ApplicationTemplate",
    plural = "applicationtemplates",
    derive = "PartialEq",
    namespaced
)]
pub struct ApplicationTemplateSpec {
    pub repo: String,
    pub reference: String,
    pub path: String,
}
